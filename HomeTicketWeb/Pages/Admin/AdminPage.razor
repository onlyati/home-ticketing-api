@page "/admin"

<div class="ati-full-window">
    <WindowTitle Title="Play a God, you are and admin now!" CloseAction="@CloseWindow" /> 
    <div class="bg-white container">
        <div class="row">
            <div class="col-auto">
                <CascadingValue Value="AdminPageState.ActMenu">
                    <TreeMenu MenuTree="UserMenu" @ref="TMenu" AfterClick="UpdateState" />
                </CascadingValue>
            </div>
            <div class="col">
                <TreeMenuContent ID="1" TreeMenuRef="TMenu">
                    <p>Add/change/delete users...</p>
                </TreeMenuContent>
                <TreeMenuContent ID="2" TreeMenuRef="TMenu">
                    <p>Assign user to groups...</p>
                </TreeMenuContent>
                <TreeMenuContent ID="3" TreeMenuRef="TMenu">
                    <p>Add/change/delete systems...</p>
                </TreeMenuContent>
                <TreeMenuContent ID="4" TreeMenuRef="TMenu">
                    <p>Add/change/delete category...</p>
                </TreeMenuContent>
                <TreeMenuContent ID="5" TreeMenuRef="TMenu">
                    <p>Assign categories to system...</p>
                </TreeMenuContent>
            </div>
        </div>
    </div>
</div>

@code {
    [CascadingParameter] public MainLayout Layout { get; set; }

    public TreeMenu TMenu;

    private List<TreeMenuItem> UserMenu = new List<TreeMenuItem>()
    {
        new TreeMenuItem() { Title = "User adjustment", Section = "User management", Id = 1 },
        new TreeMenuItem() { Title = "User-Group assigments", Section = "User management", Id = 2 },
        new TreeMenuItem() { Title = "System adjustment", Section = "Sytem management", Id = 3 },
        new TreeMenuItem() { Title = "Category adjustment", Section = "Category management", Id = 4 },
        new TreeMenuItem() { Title = "Category-System assignments", Section = "Category management", Id = 5 },
    };

    protected override void OnInitialized()
    {
        if (User.Role != UserRole.Admin || User.UserName == null)
        {
            if (Layout != null)
                if (Layout.AlertBox != null)
                    Layout.AlertBox.SetAlert("Unathorized access", "You are not authorized. Login first if you want to do something", AlertBox.AlertBoxType.Error);

            if (Layout != null)
                if (Layout.Bar != null)
                    Layout.Bar.RemoveOpenedApp("/admin");

            NavManager.NavigateTo("/");
        }
    }

    public void UpdateState()
    {
        if(TMenu != null)
            if(TMenu.ActMenu != null)
                AdminPageState.ActMenu = TMenu.ActMenu;

        StateHasChanged();
    }

    private void CloseWindow()
    {
        if (AdminPageState != null)
            AdminPageState.SetNull();

        if (Layout != null)
            if (Layout.Bar != null)
                Layout.Bar.RemoveOpenedApp(NavManager.Uri.Substring(NavManager.BaseUri.Length - 1));
    }
}
