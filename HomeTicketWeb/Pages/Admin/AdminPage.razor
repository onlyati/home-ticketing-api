@page "/admin"

<div class="ati-full-window">
    <div class="row ati-window-title m-0">
        <div class="col">
            <h5>Play a God, you are an admin now!</h5>
        </div>
        <div class="col-auto">
            <button type="button" class="close" aria-label="Close" @onclick="@CloseWindow">
                <img src="img/close-icon.png" height="25" width="25" />
            </button>
        </div>
    </div>
    <div class="bg-white container-fluid">
        <div class="row">
            <div class="col-auto">
                <TreeMenu MenuTree="UserMenu" @ref="TMenu" AfterClick="StateHasChanged" />
            </div>
            <div class="col">
                @if (TMenu != null)
                {
                    @if (TMenu.MenuTree != null)
                    {
                        @if (TMenu.MenuTree.Where(s => s.Title.Equals("Add new user")).Select(s => s.Selected).FirstOrDefault())
                        {
                            <p>Add new user...</p>
                        }
                        @if (TMenu.MenuTree.Where(s => s.Title.Equals("Change user")).Select(s => s.Selected).FirstOrDefault())
                        {
                            <p>Change user...</p>
                        }
                        @if (TMenu.MenuTree.Where(s => s.Title.Equals("Delete user")).Select(s => s.Selected).FirstOrDefault())
                        {
                            <p>Delete user...</p>
                        }
                    }
                 }
            </div>
        </div>
    </div>
</div>

@code {
    [CascadingParameter] public MainLayout Layout { get; set; }

    private TreeMenu TMenu;

    private List<TreeMenuItem> UserMenu = new List<TreeMenuItem>()
    {
        new TreeMenuItem() { Title = "Add new user", Section = "User settings"},
        new TreeMenuItem() { Title = "Change user", Section = "User settings" },
        new TreeMenuItem() { Title = "Delete user", Section = "User settings" },
        new TreeMenuItem() { Title = "Add new system", Section = "Sytem settings" },
        new TreeMenuItem() { Title = "Rename system", Section = "Sytem settings" },
        new TreeMenuItem() { Title = "Delete system", Section = "Sytem settings" },
        new TreeMenuItem() { Title = "Add new category", Section = "Category settings" },
        new TreeMenuItem() { Title = "Rename category", Section = "Category settings" },
        new TreeMenuItem() { Title = "Delete category", Section = "Category settings" },
    };

    protected override void OnInitialized()
    {
        if (User.Role != UserRole.Admin || User.UserName == null)
        {
            if (Layout != null)
                if (Layout.AlertBox != null)
                    Layout.AlertBox.SetAlert("Unathorized access", "You are not authorized. Login first if you want to do something", AlertBox.AlertBoxType.Error);

            if (Layout != null)
                if (Layout.Bar != null)
                    Layout.Bar.RemoveOpenedApp("/admin");

            NavManager.NavigateTo("/");
        }
    }

    private void CloseWindow()
    {
        if (AdminPageState != null)
            AdminPageState.SetNull();

        if (Layout != null)
            if (Layout.Bar != null)
                Layout.Bar.RemoveOpenedApp(NavManager.Uri.Substring(NavManager.BaseUri.Length - 1));
    }
}
