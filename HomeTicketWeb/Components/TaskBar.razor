@if (IsVisible)
{
    <div class="ati-taskbar-applications">
        @if (AppList == null)
        {
            <p>Loading...</p>
        }
        else
        {
            <div class="row" style="height: 100%">
                <div class="col">
                    <CascadingValue Value="this">
                        @foreach (var item in AppList)
                        {
                            <ApplicationItem Icon="@item.Image" Title="@item.Title" Route="@item.Route" Text="@item.Text" />
                        }
                    </CascadingValue>
                </div>
                <div class="col ati-taskbar-description">
                    <div class="row justify-content-center mb-3 mt-3">
                        <img src="@DescIcon" width="144" height="144" />
                    </div>
                    <div class="row justify-content-center mb-8">
                        <h5>@DescTitle</h5>
                    </div>
                    <div class="row mr-3 ml-3">
                        @DescText
                    </div>
                </div>
            </div>
        }
    </div>
}
<div class="ati-taskbar">
    <div class="row m-0">
        <div class="float-left">
            <button class="ati-btn-application" @onclick="@Usage">Applications</button>
        </div>
        @foreach (var item in OpenedApps)
        {
            <div class="float-right" oncontextmenu="return false;">
                <button class="ati-btn-appitem" id="@(item.Route)" @onclick="() => NavManager.NavigateTo(item.Route)" @onmouseup="(e) => ContextMenu(e, item)">
                    <img src="@item.Image" width="21" height="21" />
                    @item.Title
                </button>
                <ContextMenu @ref="item.ContextMenu" OpenAction="() => NavManager.NavigateTo(item.Route)" CloseAction="() => RemoveOpenedApp(item.Route)" AppName="@item.Title" Id="@(item.Route)" />
            </div>
        }
    </div>
</div>



@code {
        [Parameter] public List<TaskBarMenuItem> AppList { get; set; }

        [CascadingParameter] public MainLayout Layout { get; set; }

    private List<TaskBarMenuItem> OpenedApps = new List<TaskBarMenuItem>();

    private bool IsVisible = false;
    private string DescText;
    private string DescTitle;
    private string DescIcon;

    private void ContextMenu(MouseEventArgs e, TaskBarMenuItem item)
    {
        if (e.Button == 2)
        {
            item.ContextMenu.Show();
        }
    }

    public void AddOpenedApp(string route)
    {
        if (route == "/" || route == "/index")
            return;

        TaskBarMenuItem app = null;
        foreach (var item in AppList)
        {
            if (item.CompareRoute(route))
                app = item;
        }

        if (app != null)
        {
            var isContain = OpenedApps.Where(s => s.Title == app.Title).Select(s => s).FirstOrDefault();
            if (isContain == null)
            {
                var record = AppList.Where(s => s.Title == app.Title).Select(s => s).FirstOrDefault();
                OpenedApps.Add(record);
            }
        }

        StateHasChanged();
    }

    public void RemoveOpenedApp(string route)
    {
        if (route == "/index")
            route = "/";

        TaskBarMenuItem app = null;
        foreach (var item in AppList)
        {
            if (item.CompareRoute(route))
                app = item;
        }

        if (app != null)
        {
            var record = OpenedApps.Where(s => s.Title == app.Title).Select(s => s).FirstOrDefault();
            if (record != null)
            {
                if(record.DataContainer != null)
                    record.DataContainer.SetNull();

                OpenedApps.Remove(record);
            }
        }

        StateHasChanged();

        if(OpenedApps.Count == 0)
        {
            NavManager.NavigateTo("/");
        }
        else
        {
            NavManager.NavigateTo(OpenedApps[OpenedApps.Count - 1].Route);
        }

    }

    private void RemoveOpenedApp(string route, bool navigate)
    {
        if (route == "/index")
            route = "/";

        TaskBarMenuItem app = null;
        foreach (var item in AppList)
        {
            if (item.CompareRoute(route))
                app = item;
        }

        if (app != null)
        {
            var record = OpenedApps.Where(s => s.Title == app.Title).Select(s => s).FirstOrDefault();
            if (record != null)
            {
                if (record.DataContainer != null)
                    record.DataContainer.SetNull();

                OpenedApps.Remove(record);
            }
        }

        StateHasChanged();

        if (navigate)
        {
            if (OpenedApps.Count == 0)
            {
                NavManager.NavigateTo("/");
            }
            else
            {
                NavManager.NavigateTo(OpenedApps[OpenedApps.Count - 1].Route);
            }
        }
    }


    public void ClearOpenedApp()
    {
        var routeList = OpenedApps.Select(s => s.Route).ToList();
        foreach (var item in routeList)
        {
            RemoveOpenedApp(item, false);
        }
        StateHasChanged();
    }

    public void ShowDescription(string title, string icon, string text)
    {
        DescText = text;
        DescIcon = icon;
        DescTitle = title;
        StateHasChanged();
    }

    private void Usage()
    {
        string actPage = NavManager.Uri.Substring(NavManager.BaseUri.Length - 1);
        if (actPage == "") actPage = "/";

        foreach (var item in Layout.Apps)
        {
            if(item.CompareRoute(actPage))
            {
                DescIcon = item.Image;
                DescText = item.Text;
                DescTitle = item.Title;
            }
        }

        IsVisible = !IsVisible;
        StateHasChanged();
    }

    public void Hide()
    {
        IsVisible = false;
        StateHasChanged();
    }

}
