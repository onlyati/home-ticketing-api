<!------------------------------------------------------------------------------------------------>
<!-- Popup.razor                                                                                -->
<!--                                                                                            -->
<!-- This component is a draggable window. Size is equal with the ChildContent size             -->
<!--                                                                                            -->
<!-- Parameters:                                                                                -->
<!-- - ChildContent: what should be dsiplayed in the box                                        -->
<!-- - PositionX/PositionY: if the default position is not OK, it can specified                 -->
<!-- - DirectionX/DirectionY: where should PositionX/Y measured                                 -->
<!--                                                                                            -->
<!------------------------------------------------------------------------------------------------>

<div class="ati-popup-box" style="@(DirectionY): @yCssPos; @(DirectionX): @xCssPos; transform: @transformCss"
     @ondragstart="BeginDrag" @ondragend="EndDrag" id="#PopupBox">
    @ChildContent
</div>

@code {
    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public int? PositionX { get; set; } = null;
    [Parameter] public int? PositionY { get; set; } = null;
    [Parameter] public string DirectionX { get; set; } = "left";
    [Parameter] public string DirectionY { get; set; } = "top";

    private double xPos1, yPos1;
    private double? xPos2 = null, yPos2 = null;
    private string xCssPos = "50%", yCssPos = "50%", transformCss = "translate(-50%, -50%)";

    protected override void OnInitialized()
    {
        if (PositionX != null)
        {
            xCssPos = $"{PositionX}px";
            transformCss = "none";
        }

        if (PositionY != null)
        {
            yCssPos = $"{PositionY}px";
            transformCss = "none";
        }
    }

    public void BeginDrag(DragEventArgs e)
    {
        JSCalls call = new JSCalls(js);
        var dimensions = call.GetBounds("#PopupBox");
        var window = call.GetBrowserDimension();

        if (xPos2 == null)
            xPos2 = (window.Width - dimensions.Width) / 2;

        if (yPos2 == null)
            yPos2 = (window.Height - dimensions.Height) / 2;

        xPos1 = e.ClientX;
        yPos1 = e.ClientY;
    }

    public void EndDrag(DragEventArgs e)
    {
        transformCss = "none";
        xPos2 += e.ClientX - xPos1;
        yPos2 += e.ClientY - yPos1;

        if (xPos2 < 0) xPos2 = 0;
        if (yPos2 < 0) yPos2 = 0;

        JSCalls call = new JSCalls(js);
        var window = call.GetBrowserDimension();
        var dimensions = call.GetBounds("#PopupBox");

        if (xPos2 > window.Width - dimensions.Width) xPos2 = window.Width - dimensions.Width;
        if (yPos2 > window.Height - dimensions.Height) yPos2 = window.Height - dimensions.Height;

        xCssPos = $"{Convert.ToInt32(xPos2)}px";
        yCssPos = $"{Convert.ToInt32(yPos2)}px";
    }
}